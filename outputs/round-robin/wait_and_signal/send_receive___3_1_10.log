===== Iteration: 1 =====
Run 1 for 3 slices
PID	STATE		TOTAL	SYSCALL	EXECUTE
1	RUNNING		0	0	0
Syscall Fork(0), remaining 2 -> Pid(Pid(2))


===== Iteration: 2 =====
Run 1 for 2 slices
PID	STATE		TOTAL	SYSCALL	EXECUTE
1	RUNNING		1	1	1
2	READY		0	0	0
Expired -> Success


===== Iteration: 3 =====
Run 2 for 3 slices
PID	STATE		TOTAL	SYSCALL	EXECUTE
1	READY		3	1	3
2	RUNNING		2	0	0
Syscall Wait(1), remaining 2 -> Success


===== Iteration: 4 =====
Run 1 for 3 slices
PID	STATE		TOTAL	SYSCALL	EXECUTE
1	RUNNING		4	1	3
2	EVENT 1		3	1	1
Expired -> Success


===== Iteration: 5 =====
Run 1 for 3 slices
PID	STATE		TOTAL	SYSCALL	EXECUTE
1	RUNNING		7	1	6
2	EVENT 1		6	1	1
Syscall Signal(1), remaining 2 -> Success


===== Iteration: 6 =====
Run 1 for 2 slices
PID	STATE		TOTAL	SYSCALL	EXECUTE
1	RUNNING		8	2	7
2	READY		7	1	1
Syscall Sleep(10), remaining 1 -> Success


===== Iteration: 7 =====
Run 2 for 3 slices
PID	STATE		TOTAL	SYSCALL	EXECUTE
1	SLEEP		9	3	8
2	RUNNING		8	1	1
Expired -> Success


===== Iteration: 8 =====
Run 2 for 3 slices
PID	STATE		TOTAL	SYSCALL	EXECUTE
1	SLEEP		12	3	8
2	RUNNING		11	1	4
Syscall Exit, remaining 0 -> Success


===== Iteration: 9 =====
Sleep for 4 slices
PID	STATE		TOTAL	SYSCALL	EXECUTE
1	SLEEP		15	3	8


===== Iteration: 10 =====
Run 1 for 3 slices
PID	STATE		TOTAL	SYSCALL	EXECUTE
1	RUNNING		19	3	8
Syscall Exit, remaining 2 -> Success


===== Iteration: 11 =====
Done, no more processes
PID	STATE		TOTAL	SYSCALL	EXECUTE


